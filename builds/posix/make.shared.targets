# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# You may obtain a copy of the Licence at
# http://www.gnu.org/licences/lgpl.html
# 
# As a special exception this file can also be included in modules
# with other source code as long as that source code has been 
# released under an Open Source Initiative certificed licence.  
# More information about OSI certification can be found at: 
# http://www.opensource.org 
# 
# This module is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public Licence for more details.
# 
# This module was created by members of the firebird development 
# team.  All individual contributions remain the Copyright (C) of 
# those individuals and all rights are reserved.  Contributors to 
# this file are either listed below or can be obtained from a CVS 
# history command.
#
#  Created by:  Mark O'Donohue <mark.odonohue@ludwig.edu.au>
#
#  Contributor(s):
# 
#
#  $Id: make.shared.targets,v 1.4 2003-02-10 11:54:30 dimitr Exp $
#


#-----------------------------------------------------------
# Amongst a number of makefiles some of the targets have
# specific rules. Rather than duplicate the rules in a 
# number of makefiles, these have been included here.
# 
# Hopefully this file is an intermediate step, on the way to 
# potentially a single makefile, or at least one per directory.
# MOD 07-Oct-2002





# This is the one where dyn_def.epp produced dyn_def.cpp and then the sed
# script is run to remove a component of it.  This is pretty ugly, and even
# if we have to live with it, the makefile should be changed to make the
# dependencies clearer. MOD July-2001

$(SRC)/jrd/dyn_def.cpp : $(SRC)/jrd/dyn_def.epp $(SRC)/jrd/dyn_def.sed
	$(GPRE_BOOT) $(JRD_GPRE_FLAGS) $< $(GEN_SRC)/jrd/dyn_deffoo.cpp
	sed -f $(SRC)/jrd/dyn_def.sed $(GEN_SRC)/jrd/dyn_deffoo.cpp > $@


# This rule creates parse.cpp from parse.y 
# The intermediate files dsql.tab.c dsql.tab.h and parse.cpp are generated 
# and are also stored in the CVS tree. MOD 7-Oct-2002

$(SRC)/dsql/parse.cpp: $(SRC)/dsql/parse.y $(SRC)/dsql/parse.sed
	$(YACC) -l -d -b $(SRC)/dsql/dsql $<
	sed -f $(SRC)/dsql/parse.sed <$(SRC)/dsql/dsql.tab.c > $@  



# gpre_meta needs a special boot build since there is no database.

$(SRC)/gpre/gpre_meta.cpp:  $(SRC)/gpre/gpre_meta.epp
	$(GPRE_BOOT) -lang_internal $(GPRE_FLAGS) $< $@




buildb: security.fdb yachts.lnk help.gdb

security.fdb : $(ISC_GDB)
	-ln -sf $(ISC_GDB) $@

yachts.lnk: 
	-ln -fs $(SRC_ROOT)/refDatabases/empty.gdb yachts.lnk

help.gdb:
	-ln -fs $(SRC_ROOT)/refDatabases/help.gdb help.gdb



# These need to change to $(GEN_SRC) at some stage
$(SRC)/dudley/exe.cpp $(SRC)/dudley/extract.epp:      yachts.lnk

$(SRC)/qli/meta.cpp $(SRC)/qli/proc.cpp $(SRC)/qli/show.cpp: yachts.lnk
$(SRC)/qli/help.cpp:        help.gdb


.PHONY: clean FORCE

clean:
	-rm $(AllObjects)
	-rm $(Dependancies)


# This target is used in the generated dependancy xxx.d files which are
# automatically created from the .cpp files.  To simplify the build 
# process, if the .d files does not yet exist, a line is written
# of the form  fred.o : FORCE to ennsure that fred.cpp will be 
# recompiled MOD 7-Oct-2002

FORCE:
