

# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# You may obtain a copy of the Licence at
# http://www.gnu.org/licences/lgpl.html
# 
# As a special exception this file can also be included in modules
# with other source code as long as that source code has been 
# released under an Open Source Initiative certificed licence.  
# More information about OSI certification can be found at: 
# http://www.opensource.org 
# 
# This module is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public Licence for more details.
# 
# This module was created by members of the firebird development 
# team.  All individual contributions remain the Copyright (C) of 
# those individuals and all rights are reserved.  Contributors to 
# this file are either listed below or can be obtained from a CVS 
# history command.
#
#  Created by:  Mark O'Donohue <mark.odonohue@ludwig.edu.au>
#
#  Contributor(s):
# 
#
#  $Id: Makefile.in.libfbembed,v 1.1 2002-07-29 15:04:06 skywalker Exp $
#
ROOT=..
ObjModuleName=libfbembed
ArchType=classic

include     $(ROOT)/gen/make.rules
include     $(ROOT)/gen/make.defaults
include     $(ROOT)/gen/make.platform
include     $(ROOT)/gen/make.shared.variables

@SET_MAKE@


# These are deliberatly unexported otherwise gbak and others will try and check
# the userid against the isc4.gdb database, which doesn't exist at this stage 
# in the build. MOD 11-July-2002

unexport ISC_USER
unexport ISC_PASSWORD


AllObjects = $(LIBFBEMBED_Objects)
Dependencies = $(AllObjects:.o=.d)


.PHONY: libfbembed

libfbembed : $(LIBFBEMBED_SO)

$(LIBFBEMBED_SO):	$(LIBFBEMBED_Objects)
	$(LIB_LINK) -Wl,-soname,libfbembed.so.1 -Wl,-rpath,/usr/lib -o $@ $^
	-$(LN) $(@F) $(LIBFBEMBED_SOBASENAME) 
	-$(LN) $(notdir $(LIBFBEMBED_SOBASENAME)) $(LIBFBEMBED_SONAME)


# This is the one where dyn_def.epp produced dyn_def.cpp and then the sed
# script is run to remove a component of it.  This is pretty ugly, and even
# if we have to live with it, the makefile should be changed to make the
# dependencies clearer.

$(SRC)/dyn_def.cpp : $(SRC)/dyn_def.epp $(SRC)/dyn_def.sed
	$(GPRE_BOOT) $(GPRE_FLAGS) $< $(GEN_SRC)/dyn_deffoo.cpp
	sed -f $(SRC)/dyn_def.sed $(GEN_SRC)/dyn_deffoo.cpp > $@

# This was the old dependancies.
#$(BIN)/dyn_def.o: $(SRC)/dyn_def.cpp $(SRC)/dyn_def.sed
#	sed -f dyn_def.sed $< > dyn_deffoo.cpp
#	$(CXX) -c $(CFLAGS) $(CXX_INCLUDE_DIRS) $(VERSION_FLAG) dyn_deffoo.cpp
#	$(MV) dyn_deffoo.o dyn_def.bin
#	-$(RM) dyn_deffoo.cpp dyn_deffoo.o



buildb: isc4.gdb yachts.lnk

isc4.gdb : $(ISC_GDB)
	-ln -sf $(ISC_GDB) $@

yachts.lnk: 
	ln -fs $(SRC_ROOT)/refDatabases/empty.gdb yachts.lnk



FORCE:

-include $(Dependencies)
