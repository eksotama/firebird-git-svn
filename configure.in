AC_INIT(src)
AC_CONFIG_AUX_DIR(src/make.new/config)
AC_CACHE_VAL(ac_cv_prog_make_set, [AC_PROG_MAKE_SET])
AC_PREFIX_DEFAULT(/usr/local/firebird)

AC_CONFIG_HEADER(src/include/gen/autoconfig.h:src/make.new/config/config.h.in)

# possibly needed if we use install-sh program
#AC_CONFIG_AUX_DIR(`pwd`)

AC_CANONICAL_SYSTEM

AC_PROG_AWK
AC_PROG_CC
AC_PROG_CXX
AC_PROG_LEX
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PROG_YACC

AC_CHECK_HEADERS(assert.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(fcntl.h)
AC_CHECK_HEADERS(grp.h)
AC_CHECK_HEADERS(libio.h)
AC_CHECK_HEADERS(sys/types.h)
AC_CHECK_HEADERS(sys/stat.h)
AC_CHECK_HEADERS(sys/uio.h)
AC_CHECK_HEADERS(sys/wait.h)
AC_CHECK_HEADERS(time.h)
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADERS(sys/param.h)
AC_CHECK_HEADERS(varargs.h)
AC_CHECK_HEADERS(stdarg.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(ctype.h)
AC_CHECK_HEADERS(string.h)
AC_CHECK_HEADERS(signal.h)
AC_CHECK_HEADERS(readline/readline.h)


AC_MSG_CHECKING(Checking for socklen_t type)
AC_TRY_COMPILE([#include <stdlib.h>
#include <sys/types.h>
#include <sys/socket.h>
],
[socklen_t a;],
[AC_MSG_RESULT(yes)],
[AC_DEFINE(socklen_t, int) AC_MSG_RESULT(no)])


AC_C_BIGENDIAN
AC_C_CONST

case "$target_cpu" in
powerpc) AC_DEFINE(PowerPC) ;;
esac

case "$target" in
*-*-darwin*) MAKEFILE_PREFIX=darwin ; PLATFORM=DARWIN ; AC_DEFINE(DARWIN);;
*-*-freebsd*) MAKEFILE_PREFIX=freebsd ; PLATFORM=FREEBSD ; AC_DEFINE(FREEBSD);;
*-*-linux*) MAKEFILE_PREFIX=linux ; PLATFORM=LINUX ; AC_DEFINE(LINUX) ;;
*-*-netbsd*) MAKEFILE_PREFIX=netbsd ; PLATFORM=NETBSD ; AC_DEFINE(NETBSD) ;;
*-*-hpux*) MAKEFILE_PREFIX=hpux ; PLATFORM=hpux ; AC_DEFINE(hpux) ;;
esac

AC_SUBST(PLATFORM)

FIREBIRD_ARCH_TYPE=classic
#FIREBIRD_ARCH_TYPE=super
AC_SUBST(FIREBIRD_ARCH_TYPE)



CPU_TYPE=$host_cpu
AC_SUBST(CPU_TYPE)
# The following file defines the version number strings
source src/misc/writeBuildNum.sh
FIREBIRD_PACKAGE_VERSION="0a.Dev1"


FIREBIRD_LIBGDS_SO=libgds.so.${FIREBIRD_VERSION}
FIREBIRD_LIBGDS_SO_LNK=libgds.so
FIREBIRD_LIBGDS_SO_X_LNK=libgds.so.${MajorVer}

AC_SUBST(FIREBIRD_LIBGDS_SO)
AC_SUBST(FIREBIRD_LIBGDS_SO_LNK)
AC_SUBST(FIREBIRD_LIBGDS_SO_X_LNK)


AC_SUBST(FIREBIRD_VERSION)
AC_SUBST(FIREBIRD_PACKAGE_VERSION)


#AC_DEFINE_UNQUOTED(FB_BUILD_TYPE, "$BuildType")
#AC_DEFINE_UNQUOTED(FB_MAJOR_VER, "$MajorVer")
#AC_DEFINE_UNQUOTED(FB_MINOR_VER, "$MinorVer")
#AC_DEFINE_UNQUOTED(FB_REV_NO, "$RevNo")
#AC_DEFINE_UNQUOTED(FB_BUILD_SUFFIX, "$BuildSuffix")
#AC_DEFINE_UNQUOTED(PRODUCT_VER_STRING, "$PRODUCT_VER_STRING")
#AC_DEFINE_UNQUOTED(FILE_VER_NUMBER, $FILE_VER_NUMBER)
#AC_DEFINE_UNQUOTED(FILE_VER_STRING, "$FILE_VER_STRING")
#AC_DEFINE_UNQUOTED(LICENSE_VER_STRING, "$FILE_VER_STRING")




PROD_BUILD_FLG= 
#PROD_BUILD_FLG=Y
AC_SUBST(PROD_BUILD_FLG)

AC_OUTPUT_COMMANDS([mkdir -p gen/csv])
AC_OUTPUT_COMMANDS([mkdir -p gen/dudley])
AC_OUTPUT_COMMANDS([mkdir -p gen/isql])
AC_OUTPUT_COMMANDS([mkdir -p gen/lock])
AC_OUTPUT_COMMANDS([mkdir -p gen/gpre])
AC_OUTPUT_COMMANDS([mkdir -p gen/pipe])
AC_OUTPUT_COMMANDS([mkdir -p gen/remote])
AC_OUTPUT_COMMANDS([mkdir -p gen/wal])
AC_OUTPUT_COMMANDS([mkdir -p gen/alice])
AC_OUTPUT_COMMANDS([mkdir -p gen/refDatabases])
AC_OUTPUT_COMMANDS([mkdir -p gen/v5_examples])
AC_OUTPUT_COMMANDS([mkdir -p gen/gpre])
AC_OUTPUT_COMMANDS([mkdir -p gen/journal])
AC_OUTPUT_COMMANDS([mkdir -p gen/msgs])
AC_OUTPUT_COMMANDS([mkdir -p gen/burp])
AC_OUTPUT_COMMANDS([mkdir -p gen/dsql])
AC_OUTPUT_COMMANDS([mkdir -p gen/extlib])
AC_OUTPUT_COMMANDS([mkdir -p gen/intl])
AC_OUTPUT_COMMANDS([mkdir -p gen/jrd])
AC_OUTPUT_COMMANDS([mkdir -p gen/qli])
AC_OUTPUT_COMMANDS([mkdir -p gen/utilities])
AC_OUTPUT_COMMANDS([mkdir -p gen/fbutil])

AC_OUTPUT_COMMANDS([mkdir -p gen/install])
AC_OUTPUT_COMMANDS([mkdir -p gen/install/scripts])

AC_OUTPUT_COMMANDS([mkdir -p gen/firebird/include])
AC_OUTPUT_COMMANDS([mkdir -p gen/firebird/intl])
AC_OUTPUT_COMMANDS([mkdir -p gen/firebird/UDF])
AC_OUTPUT_COMMANDS([mkdir -p gen/firebird/bin])
AC_OUTPUT_COMMANDS([mkdir -p gen/firebird/examples/v5])
AC_OUTPUT_COMMANDS([mkdir -p gen/firebird/lib])
AC_OUTPUT_COMMANDS([mkdir -p gen/firebird/misc])
AC_OUTPUT_COMMANDS([mkdir -p gen/firebird/help])

AC_OUTPUT_COMMANDS([chmod a+x gen/install/install.sh])
AC_OUTPUT_COMMANDS([chmod a+x gen/install/scripts/*.sh])


AC_OUTPUT( \
src/make.rules:src/make.new/make.rules \
src/make.defaults:src/make.new/make.defaults \
src/make.platform:src/make.new/prefix.${MAKEFILE_PREFIX} \
src/make.shared.variables:src/make.new/make.shared.variables \
src/fbutil/Makefile:src/make.new/Makefile.in.fbutil \
src/alice/Makefile:src/make.new/Makefile.in.alice \
src/burp/Makefile:src/make.new/Makefile.in.burp \
src/csv/Makefile:src/make.new/Makefile.in.csv \
src/refDatabases/Makefile:src/make.new/Makefile.in.refDatabases \
src/dsql/Makefile:src/make.new/Makefile.in.dsql \
src/dudley/Makefile:src/make.new/Makefile.in.dudley \
src/v5_examples/Makefile:src/make.new/Makefile.in.example5 \
src/extlib/Makefile:src/make.new/Makefile.in.extlib \
src/gpre/Makefile:src/make.new/Makefile.in.gpre \
src/intl/Makefile:src/make.new/Makefile.in.intl \
src/isql/Makefile:src/make.new/Makefile.in.isql \
src/journal/Makefile:src/make.new/Makefile.in.journal \
src/jrd/Makefile:src/make.new/Makefile.in.jrd \
src/lock/Makefile:src/make.new/Makefile.in.lock \
src/msgs/Makefile:src/make.new/Makefile.in.msgs \
src/pipe/Makefile:src/make.new/Makefile.in.pipe \
src/qli/Makefile:src/make.new/Makefile.in.qli \
src/remote/Makefile:src/make.new/Makefile.in.remote \
src/utilities/Makefile:src/make.new/Makefile.in.utilities \
src/wal/Makefile:src/make.new/Makefile.in.wal \
src/install/Makefile:src/make.new/Makefile.in.install \
src/Makefile:src/make.new/Makefile.in.firebird \
Makefile:Makefile.in \
gen/install/scripts/preinstall.sh:src/install/${FIREBIRD_ARCH_TYPE}/preinstall.sh.in \
gen/install/scripts/install.sh:src/install/${FIREBIRD_ARCH_TYPE}/install.sh.in \
gen/install/scripts/postinstall.sh:src/install/${FIREBIRD_ARCH_TYPE}/postinstall.sh.in \
gen/install/scripts/preuninstall.sh:src/install/${FIREBIRD_ARCH_TYPE}/preuninstall.sh.in \
gen/install/scripts/postuninstall.sh:src/install/${FIREBIRD_ARCH_TYPE}/postuninstall.sh.in \
gen/install/install.sh:src/install/${FIREBIRD_ARCH_TYPE}/tarInstall.sh.in \
src/install/misc/firebird.xinetd \
)
