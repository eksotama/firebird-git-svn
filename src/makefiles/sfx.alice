# The contents of this file are subject to the Interbase Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy
# of the License at http://www.Inprise.com/IPL.html
#
# Software distributed under the License is distributed on an
# "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
# or implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code was created by Inprise Corporation
# and its predecessors. Portions created by Inprise Corporation are
# Copyright (C) Inprise Corporation.
#
# All Rights Reserved.
# Contributor(s): ______________________________________.

SOURCE=         source
OBJS=           objs

srcdir=         $(SOURCE)/alice
VPATH=          $(SOURCE)/alice
CXX=            @CXX@

unexport ISC_USER
unexport ISC_PASSWORD

.SUFFIXES:      .cpp .epp
.epp.cpp:
	$(GPRE_STATIC) $(GPRE_FLAGS) $< $@


GPRE=		$(OBJS)/firebird/bin/gpre$(EXEC_EXT)
GPRE_STATIC=	$(OBJS)/firebird/bin/gpre_static$(EXEC_EXT)
ALICE=		$(OBJS)/firebird/bin/gfix$(EXEC_EXT)
GPRE_FLAGS=	-r -m -z -n
CXX_INCLUDE_DIRS=       -I. -Isource/jrd -I-

JRD_LINK=	$(OBJS)/jrd/isc.o

ALICE_HEADERS=	alice.h all.h alloc.h
ALICE_OBJECTS=	alice.o all.o exe.o alice_meta.o tdr.o 

all:	alice$(EXEC_EXT)

# JMB $(JRD_LINK) (source/jrd/isc.o) is already in the shared library (isc.bin)
# so I removed it from the link line on the executable.
alice:		$(ALICE_OBJECTS) $(JRD_LINK) $(GDSSHR)
	-$(RM) alice
	$(CXX) $(LINK_OPTS) $(ALICE_OBJECTS) $(T_SWITCH) -o alice \
	$(GDSSHR_LINK)
	$(CHMOD_7) alice
	$(MV) alice $(ALICE)
	$(TOUCH) alice
	$(CHMOD_6) alice

alice.exe:	$(ALICE_OBJECTS) $(JRD_LINK)
	-$(RM) alice.exe
	$(CXX) $(O_EXE_SWITCH)alice $(LINK_OPTS) \
	$(ALICE_OBJECTS) $(GDSSHR_LINK) $(ADVAPILIB)
	$(MV) alice.exe $(ALICE)
	$(RM) alice.exe
	$(TOUCH) alice.exe

debug:		$(ALICE_OBJECTS) $(GDSLIB)
	$(CXX) $(LINK_OPTS) -g $(ALICE_OBJECTS) -o alice_dbg $(GDSLIB_LINK)

debug_nt:	$(ALICE_OBJECTS)
	$(CXX) $(DEBUG_LINK_OPTS) $(O_EXE_SWITCH)alice_dbg $(ALICE_OBJECTS) $(GDSLIB_LINK)

alice.h:	blk.h
	$(TOUCH) alice.h
alice.o:	alice.cpp $(ALICE_HEADERS) alice_proto.h exe_proto.h \
		$(SOURCE)/jrd/license.h
all.o: 		all.cpp $(ALICE_HEADERS) lls.h blk.h all_proto.h \
		$(SOURCE)/jrd/gds_proto.h
exe.o:		exe.cpp $(ALICE_HEADERS) all_proto.h tdr_proto.h \
		$(SOURCE)/jrd/gds_proto.h
alice_meta.cpp:	yachts.lnk alice_meta.epp
alice_meta.o:	alice_meta.cpp $(ALICE_HEADERS) all_proto.h alice_meta.h \
		$(SOURCE)/jrd/license.h $(SOURCE)/jrd/gds_proto.h
tdr.o:		tdr.cpp $(ALICE_HEADERS) info.h \
		alice_proto.h all_proto.h alice_meta.h tdr_proto.h \
		$(SOURCE)/jrd/gds_proto.h $(SOURCE)/jrd/isc_proto.h

yachts.lnk:	$(OBJS)/dbs/empty.gdb.dummy
	ln -fs $(OBJS)/dbs/empty.gdb yachts.lnk

$(OBJS)/dbs/empty.gdb.dummy:	force
	$(CD) $(OBJS)/dbs && $(MAKE) empty.gdb.dummy

$(GDSSHR) $(GDSLIB) $(JRD_LINK):
	$(CD) $(OBJS)/jrd && $(MAKE) ALT_O="alt.o.ps1" ALT_BIN="alt.bin.ps1" SECURITY_MISC="" SECURITY_P_MISC="" $(@F)


force:

# This entry is used to programatically update the include file dependencies 
# for all *.c files in the current directory.
#
# Note that it is specific to Solaris by using the -xM1 compiler option.
# This option has CC generate dependency lines for the makefile - but
# does not generate object files.
# It is likely that a similar option exists on other platforms.
#
# It is recommended that depends.mak be created on a platform
# that supports such an option.  depends.mak is not platform dependent, it uses
# the standard makefile output format, as can be copied to platforms
# that don't have a -xM1 feature in the c compiler.
#
depends.mak:
	-$(RM) depends.out
	-$(CC) $(CFLAGS) -xM1 *.c 1>&2 > depends.out
	-$(RM) depends.mak
	$(ECHO) "# depends.mak - alice"                           > depends.mak
	$(ECHO) "# Created by 'make depends.mak'"               >> depends.mak
	date "+# Created on %Y-%m-%d"                           >> depends.mak
	sed -e "s:source/[a-z/]*/source:source:g" -e "s:source/alice/::g"\
		depends.out |sort|uniq >> depends.mak
	-$(RM) depends.out

# In the event that a platform does not support the make directive "include" - 
# concatenate "depends.mak" with the makefile.
#
include depends.mak

