# The contents of this file are subject to the Interbase Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy
# of the License at http://www.Inprise.com/IPL.html
#
# Software distributed under the License is distributed on an
# "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
# or implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code was created by Inprise Corporation
# and its predecessors. Portions created by Inprise Corporation are
# Copyright (C) Inprise Corporation.
#
# All Rights Reserved.
# Contributor(s): ______________________________________.

SOURCE=         source
OBJS=           objs

srcdir=         $(SOURCE)/wal
VPATH=          $(SOURCE)/wal
CXX=            @CXX@

GPRE=           $(OBJS)/firebird/bin/gpre$(EXEC_EXT)
GPRE_BOOT=      $(OBJS)/firebird/bin/gpre_boot$(EXEC_EXT)
CXX_INCLUDE_DIRS=       -I. -Isource/jrd -I-


WAL_OBJECTS=	wal.o walc.o walf.o walr.o wstatus.o
WALW_OBJECTS=	walc.o walf.o walw.o walw_main.o
WAL_P_OBJECTS=	wal.bin walc.bin walf.bin walr.bin

JRD_OBJECTS=	$(OBJS)/jrd/gds.o $(OBJS)/jrd/iberr.o \
		$(OBJS)/jrd/isc.o $(OBJS)/jrd/isc_file.o $(OBJS)/jrd/isc_ipc.o \
		$(OBJS)/jrd/isc_sync.o $(OBJS)/jrd/llio.o $(OBJS)/jrd/misc.o

WAL_WRITER=	$(OBJS)/firebird/bin/gds_wal_writer$(EXEC_EXT)
WAL_PRINT=	$(OBJS)/firebird/bin/gds_wal_print$(EXEC_EXT)

all:	wal_objects $(WAL_P_OBJS) wal_writer$(EXEC_EXT)

wal_objects:	$(WAL_OBJECTS)
	-$(RM) wal_objects
	$(TOUCH) wal_objects
	$(CHMOD_6) wal_objects

wal_p_objects:	$(WAL_P_OBJECTS)
	-$(RM) wal_p_objects
	$(TOUCH) wal_p_objects
	$(CHMOD_6) wal_p_objects

wal_print:	wal_prnt.o $(WAL_OBJECTS) $(JRD_OBJECTS)
	-$(RM) wal_print
	$(CXX) $(LINK_OPTS) wal_prnt.o $(WAL_OBJECTS) $(JRD_OBJECTS) \
		-o wal_print $(SCO_SOCKET_LIB) $(SO_THREAD_LIB) $(NSL_LIB)
	$(CHMOD_7) wal_print
	$(MV) wal_print $(WAL_PRINT)
	$(TOUCH) wal_print
	$(CHMOD_6) wal_print

wal_print.exe:	wal_prnt.o $(WAL_OBJECTS) $(JRD_OBJECTS) $(OBJS)/jrd/thd.o
	-$(RM) wal_print.exe wal.rsp
	$(ECHO) wal_prnt.o $(WAL_OBJECTS) $(JRD_OBJECTS) $(OBJS)/jrd/thd.o > wal.rsp
	$(CXX) $(LINK_OPTS) $(O_EXE_SWITCH)wal_print \
		@wal.rsp $(CONLIBSDLL) $(ADVAPILIB) $(MPRLIB)
	$(MV) wal_print.exe $(WAL_PRINT)
	$(RM) wal_print.exe wal.rsp
	$(TOUCH) wal_print.exe

wal_writer:	$(WALW_OBJECTS) divorce.o $(JRD_OBJECTS) $(OBJS)/jrd/jrn.o
	-$(RM) wal_writer
	$(CXX) $(LINK_OPTS) $(WALW_OBJECTS) divorce.o $(JRD_OBJECTS) $(OBJS)/jrd/jrn.o \
		-o wal_writer $(SO_SOCKET_LIB) \
		$(SCO_SOCKET_LIB) $(SO_THREAD_LIB) $(SOCKET_LIB)
	$(CHMOD_S7) wal_writer
	$(MV) wal_writer $(WAL_WRITER)
	$(TOUCH) wal_writer
	$(CHMOD_6) wal_writer

wal_writer.exe:	$(WALW_OBJECTS) $(JRD_OBJECTS) $(OBJS)/jrd/jrn.o $(OBJS)/jrd/thd.o
	-$(RM) wal_writer.exe wal.rsp
	$(ECHO) $(WALW_OBJECTS) $(JRD_OBJECTS) $(OBJS)/jrd/jrn.o $(OBJS)/jrd/thd.o > wal.rsp
	$(CXX) $(LINK_OPTS) $(O_EXE_SWITCH)wal_writer \
		@wal.rsp $(CONLIBSDLL) $(ADVAPILIB) $(MPRLIB)
	$(MV) wal_writer.exe $(WAL_WRITER)
	$(RM) wal_writer.exe wal.rsp
	$(TOUCH) wal_writer.exe

driver:		driver.o $(WAL_OBJECTS) $(JRD_OBJECTS)
	-$(RM) driver
	$(CXX) $(LINK_OPTS) driver.o $(WAL_OBJECTS) $(JRD_OBJECTS) \
		-o driver $(SCO_SOCKET_LIB) $(SO_THREAD_LIB) $(NSL_LIB)
	$(CHMOD_7) driver

driver.exe:	driver.o $(WAL_OBJECTS) $(JRD_OBJECTS) $(OBJS)/jrd/thd.o
	-$(RM) driver.exe wal.rsp
	$(ECHO) driver.o $(WAL_OBJECTS) $(JRD_OBJECTS) $(OBJS)/jrd/thd.o > wal.rsp
	$(CXX) $(LINK_OPTS) $(O_EXE_SWITCH)driver \
		@wal.rsp $(CONLIBSDLL) $(ADVAPILIB) $(MPRLIB)
	$(RM) wal.rsp

divorce.cpp:	$(SOURCE)/jrd/divorce.cpp
	$(CP) $< divorce.cpp
divorce.o divorce.bin:	divorce.cpp $(SOURCE)/jrd/divor_proto.h
driver.o driver.bin:	driver.cpp wal.h $(SOURCE)/jrd/jrd.h $(SOURCE)/jrd/flags.h \
		$(SOURCE)/jrd/dsc.h $(SOURCE)/jrd/jrn.h
wal_prnt.o wal_prnt.bin:	wal_prnt.cpp wal.h
wal.o wal.bin:		wal.cpp wal.h wal_proto.h walc_proto.h \
		$(SOURCE)/jrd/jrd.h $(SOURCE)/jrd/jrn.h \
		$(SOURCE)/jrd/gds_proto.h $(SOURCE)/jrd/iberr_proto.h \
		$(SOURCE)/jrd/isc_proto.h 
wal.h:		$(SOURCE)/jrd/misc.h $(SOURCE)/jrd/isc.h $(SOURCE)/jrd/common.h
#	$(TOUCH) wal.h
walc.o walc.bin:		walc.cpp wal.h walc_proto.h walf_proto.h \
		$(SOURCE)/jrd/jrd.h $(SOURCE)/jrd/file_params.h \
		$(SOURCE)/jrd/jrn.h $(SOURCE)/jrd/flags.h $(SOURCE)/jrd/isc.h \
		$(SOURCE)/jrd/llio.h $(SOURCE)/jrd/isc_signal.h \
		$(SOURCE)/jrd/gds_proto.h $(SOURCE)/jrd/iberr_proto.h \
		$(SOURCE)/jrd/isc_proto.h $(SOURCE)/jrd/llio_proto.h
walf.o walf.bin:		walf.cpp wal.h walf_proto.h \
		$(SOURCE)/jrd/dsc.h $(SOURCE)/jrd/llio.h $(SOURCE)/jrd/gds_proto.h \
		$(SOURCE)/jrd/iberr_proto.h $(SOURCE)/jrd/llio_proto.h \
		$(SOURCE)/jrd/misc_proto.h
walr.o walr.bin:		walr.cpp wal.h  walf_proto.h walr_proto.h \
		$(SOURCE)/jrd/llio.h \
		$(SOURCE)/jrd/gds_proto.h $(SOURCE)/jrd/iberr_proto.h \
		$(SOURCE)/jrd/llio_proto.h 
walw.o walw.bin:		walw.cpp wal.h \
		wal_proto.h walc_proto.h walf_proto.h walw_proto.h \
		$(SOURCE)/jrd/jrd.h $(SOURCE)/jrd/dsc.h $(SOURCE)/jrd/isc.h \
		$(SOURCE)/jrd/jrn.h $(SOURCE)/jrd/iberr.h $(SOURCE)/jrd/llio.h \
		$(SOURCE)/jrd/gds_proto.h $(SOURCE)/jrd/iberr_proto.h \
		$(SOURCE)/jrd/isc_proto.h $(SOURCE)/jrd/jrn_proto.h \
		$(SOURCE)/jrd/llio_proto.h $(SOURCE)/jrd/misc_proto.h
wstatus.o wstatus.bin:	wstatus.cpp wal.h wstat_proto.h walc_proto.h

$(OBJS)/jrd/%:
	$(CD) $(OBJS)/jrd && $(MAKE) CFLAGS="$(CFLAGS)" SYSTEM="$(SYSTEM)" $(@F)

# This entry is used to programatically update the include file dependencies 
# for all *.c files in the current directory.
#
# Note that it is specific to Solaris by using the -xM1 compiler option.
# This option has CC generate dependency lines for the makefile - but
# does not generate object files.
# It is likely that a similar option exists on other platforms.
#
# It is recommended that depends.mak be created on a platform
# that supports such an option.  depends.mak is not platform dependent, it uses
# the standard makefile output format, as can be copied to platforms
# that don't have a -xM1 feature in the c compiler.
#
depends.mak:
	-$(RM) depends.out
	-$(CC) $(CFLAGS) -xM1 *.c 1>&2 > depends.out
	-$(RM) depends.mak
	$(ECHO) "# depends.mak - wal"                           > depends.mak
	$(ECHO) "# Created by 'make depends.mak'"               >> depends.mak
	date "+# Created on %Y-%m-%d"                           >> depends.mak
	sed -e "s:source/[a-z/]*/source:source:g" -e "s:source/wal/::g"\
		depends.out |sort|uniq >> depends.mak
	-$(RM) depends.out

# In the event that a platform does not support the make directive "include" - 
# concatenate "depends.mak" with the makefile.
#
include depends.mak

