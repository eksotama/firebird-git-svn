# The contents of this file are subject to the Interbase Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy
# of the License at http://www.Inprise.com/IPL.html
#
# Software distributed under the License is distributed on an
# "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
# or implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code was created by Inprise Corporation
# and its predecessors. Portions created by Inprise Corporation are
# Copyright (C) Inprise Corporation.
#
# All Rights Reserved.
# Contributor(s): ______________________________________.
SOURCE=         source
OBJS=           objs

srcdir=         $(SOURCE)/pyxis
VPATH=          $(SOURCE)/pyxis
CXX=            @CXX@

CXX_INCLUDE_DIRS=       -I. -Isource/jrd -I-

unexport ISC_USER
unexport ISC_PASSWORD

.SUFFIXES:      .cpp .epp
.epp.cpp:
	$(GPRE_STATIC) $(GPRE_FLAGS) $< $@


override CFLAGS += $(CFLAGS_PYXIS)          
# override PIC_FLAGS += $(CFLAGS_PYXIS)             

GPRE=		$(OBJS)/firebird/bin/gpre
GPRE_BOOT=	$(OBJS)/firebird/bin/gpre_boot$(EXEC_EXT)
GPRE_STATIC=	$(OBJS)/firebird/bin/gpre_static$(EXEC_EXT)
GPRE_FLAGS=	-r -m -z -n
LIBPYXIS=	$(OBJS)/firebird/lib/gds_pyxis.a

# Forces library build for boot  TMC 082100
PYXIS_LIBRARY= libpyxis.a

JRD_LINK=

PYXIS_HEADERS=		$(PYXIS_H) all.h scr.h blk.h
PHASE2_OBJECTS=		allp.o altp.o debug.o edit.o menu.o movp.o phase2.o \
	phase3.o picstr.o pyxis.o save.o scr.o \
	$(PYXIS_MISC_OBJECTS)
PYXIS_P_OBJECTS=	allp.bin altp.bin cdm.bin debug.bin edit.bin \
	menu.bin movp.bin phase2.bin phase3.bin picstr.bin \
	pyxis.bin save.bin scr.bin vt100.bin

objects:	$(PYXIS_OBJS) $(PYXIS_P_OBJS) $(PYXIS_LIBRARY)

pyxis_objects:	$(PHASE2_OBJECTS)
	-$(RM) pyxis_objects
	$(TOUCH) pyxis_objects
	$(CHMOD_6) pyxis_objects

pyx_p_objects:	$(PYXIS_P_OBJECTS)
	-$(RM) pyxis_objects pyx_p_objects
	$(TOUCH) pyxis_objects pyx_p_objects
	$(CHMOD_6) pyxis_objects pyx_p_objects

pyxlib.o:	$(PHASE2_OBJECTS)
	-$(RM) pyxlib.o
	ld -r $(PHASE2_OBJECTS) $(SCREEN_LIBS) -o pyxlib.o
	$(CHMOD_6) pyxlib.o

pyxislib:	$(PHASE2_OBJECTS)
	-$(RM) pyxislib
	/com/bind <bind_pyxis
	$(CHMOD_7) pyxislib
	$(MV) pyxislib $(OBJS)/firebird/lib/pyxislib
	$(TOUCH) pyxislib
	$(CHMOD_6) pyxislib

pyxislib.lib:	$(PHASE2_OBJECTS)
	-$(RM) pyxislib.lib
	/com/lbr -create pyxislib.lib $(PHASE2_OBJECTS)
	$(CHMOD_6) pyxislib.lib

libpyxis.a:	pyxis_objects
	-$(RM) libpyxis.a
	$(AR) libpyxis.a $(PHASE2_OBJECTS)
	-ranlib libpyxis.a
	$(CHMOD_6) libpyxis.a
	$(MV) libpyxis.a $(LIBPYXIS)
	$(TOUCH) libpyxis.a
	$(CHMOD_6) libpyxis.a

scr_libs.o:
	-$(RM) scr_libs.o
	ld -r -u _endwin -u _tgetent -u _tgetflag -u _tgetent -u _tgoto \
	-u _initscr -u _tputs -u _waddstr -u _wclear -u _wgetch -u _wrefresh \
	-u _wstandend -ltermlib -lcurses -o scr_libs.o
	$(CHMOD_6) scr_libs.o

scr_libs_si.o:
	-$(RM) scr_libs_si.o
	ld -r -u endwin -u tgetent -u tgetflag -u tgetent -u tgoto \
	-u initscr -u tputs -u waddstr -u wclear -u wgetch -u wrefresh \
	-u wstandend -ltermlib -lcurses -o scr_libs_si.o
	$(CHMOD_6) scr_libs_si.o

adm.o adm.bin:		adm.cpp $(PYXIS_H) scr.h
allp.o allp.bin:	allp.cpp $(PYXIS_HEADERS)
altp.o altp.bin:	altp.cpp 
blk.o blk.bin:		blk.cpp $(PYXIS_HEADERS)

cdm.o:		cdm.cpp $(PYXIS_H) scr.h
	$(CXX) -c $(CFLAGS) $(CXX_INCLUDE_DIRS) $(VERSION_FLAG) $< -o cdm_foo.o

# The following line has been replaced as it caused an error with
# loading the lncurses library.  The create of relocatable code
# works without it, obviously this will need some testing on 
# platofrms other than linux.  
#	ld -r cdm.o $(LIB_TYPE) $(SCREEN_LIBS) -o $@
	ld -r cdm_foo.o $(LIB_TYPE)  -o $@
	-$(RM) cdm_foo.o

debug.o:	debug.cpp $(PYXIS_H) scr.h attributes.h
	$(CP) $< debugfoo.cpp
	$(CXX) -c $(CFLAGS) $(CXX_INCLUDE_DIRS) $(VERSION_FLAG) debugfoo.cpp
	$(MV) debugfoo.o debug.o
	-$(RM) debugfoo.cpp

yachts.lnk: forms.gdb
	ln -sf $< forms.gdb.dummy

forms.gdb:	$(OBJS)/dbs/forms.gdb.dummy
	ln -sf $(OBJS)/dbs/forms.gdb $@

$(OBJS)/dbs/forms.gdb.dummy:	force
	$(CD) $(OBJS)/dbs && $(MAKE) forms.gdb.dummy

# the ib6.0 gpre is not up to the task of parsing edit.c, so the one we have
# here is parsed in ib5.6.  This can be removed at some point in the future
# when gpre is fixed.
# edit.c:		edit.e
edit.c:		$(VPATH)/edit.c
	$(CP) $< .
edit.o edit.bin: \
		edit.c $(PYXIS_H) phase2.h field_edit.h size_form.h form_name.h \
		field_name.h enumerations.h 
fred.cpp:	forms.gdb fred.epp
fred.o fred.bin: \
		fred.cpp source/jrd/license.h $(PYXIS_H) size_form.h file_name.h \
		form_name.h 
menu.o menu.bin: \
		menu.cpp $(PYXIS_H) 
movp.cpp:	$(SOURCE)/qli/mov.cpp
	$(CP) $< movp.cpp
movp.o:		movp.cpp $(PYXIS_H) source/jrd/kanji.h source/jrd/gds_proto.h
	$(CXX) -c $(CFLAGS) $(VERSION_FLAG) $(CXX_INCLUDE_DIRS) -DPYXIS $<
PHASE1_H=	phase1.h attributes.h
#phase1.h:	attributes.h
#	$(TOUCH) phase1.h
phase2.o phase2.bin: \
		phase2.cpp $(PYXIS_H) phase2.h
phase3.o phase3.bin: \
		phase3.cpp $(PYXIS_H) phase2.h 
picstr.cpp:	$(SOURCE)/qli/picstr.cpp
	$(CP) $< picstr.cpp
picstr.o:	picstr.cpp $(PYXIS_H) source/jrd/gds_proto.h
	$(CXX) -c $(CFLAGS) $(CXX_INCLUDE_DIRS) $(VERSION_FLAG) -DPYXIS $<
PYXIS_H=	pyxis.h keys.h $(PHASE1_H) blk.h $(SOURCE)/jrd/dsc.h $(SOURCE)/qli/format.h
#pyxis.h:	keys.h $(PHASE1_H) blk.h $(SOURCE)/jrd/dsc.h $(SOURCE)/qli/format.h
#	$(TOUCH) pyxis.h
pyxis.o pyxis.bin: \
		pyxis.cpp $(PYXIS_H)
save.cpp:	yachts.lnk save.epp
save.o save.bin: \
		save.cpp $(PYXIS_H) form_ddl.h 
scr.o scr.bin:	scr.cpp $(PYXIS_H) scr.h
sun_ftn_pyxis.o sun_ftn_pyxis.bin: \
		sun_ftn_pyxis.cpp
vdm.o vdm.bin:	vdm.cpp $(PYXIS_H) scr.h
vt100.o:	vt100.cpp $(PYXIS_H) scr.h
	$(CXX) -c $(CFLAGS) $(CXX_INCLUDE_DIRS) $(VERSION_FLAG) $(VT100_FLAGS) $<

$(OBJS)/jrd/%:
	$(CD) $(OBJS)/jrd && $(MAKE) CFLAGS="$(CFLAGS)" SYSTEM="$(SYSTEM)" $(@F)

movp.bin:	movp.cpp
	$(CP) $< movpfoo.cpp
	$(CXX) -c $(PIC_FLAGS) $(VERSION_FLAG) $(CXX_INCLUDE_DIRS) -DPYXIS movpfoo.cpp
	$(MV) movpfoo.o movp.bin
	-$(RM) movpfoo.cpp movpfoo.o
picstr.bin:	picstr.cpp
	$(CP) $< picstrfoo.cpp
	$(CXX) -c $(PIC_FLAGS) $(CXX_INCLUDE_DIRS) $(VERSION_FLAG) -DPYXIS picstrfoo.cpp
	$(MV) picstrfoo.o picstr.bin
	-$(RM) -f picstrfoo.cpp picstrfoo.o
vt100.bin:	vt100.cpp $(PYXIS_H) scr.h

force:
