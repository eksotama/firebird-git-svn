# The contents of this file are subject to the Interbase Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy
# of the License at http://www.Inprise.com/IPL.html
#
# Software distributed under the License is distributed on an
# "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
# or implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code was created by Inprise Corporation
# and its predecessors. Portions created by Inprise Corporation are
# Copyright (C) Inprise Corporation.
#
# All Rights Reserved.
# Contributor(s): ______________________________________.
# Start of file prefix.linux:	$(VERSION)	$(PLATFORM)
#$Id: make.platform,v 1.5 2002-07-04 09:34:18 skywalker Exp $
#Revision 1.6  2000/12/01 11:20:31  fsg
#Added SHRLIB_EXT to  prefix.linux
#Added Platform Manager rules	PR 2002-06-22


# use the following to define conditional DEV/PROD compile

ifdef IsProdTypeBuild
    DEBUG_Sources=	nodebug.cpp
    CFLAGS:=            -O3 -m486 -DPROD_BUILD $(CFLAGS)

else
# Commented out since new memory model doesn't work with it.
    DEBUG_Sources=	nodebug.cpp
#    DEBUG_Sources=	grammar.c dbg.cpp dbt.cpp dmp.cpp
    CFLAGS:=		-ggdb -DDEV_BUILD $(CFLAGS)
endif


#SHRLIB_DIR=		-L$(LIB)

CFLAGS:=  $(CFLAGS) -DLINUX -Wall -fwritable-strings $(SUPER_FLAG)

#PIC_J_CFLAGS:=		$(CFLAGS_COMMON) -DPIPE_IS_SHRLIB -fPIC
#SPECIAL_OBJECTS=	j
#UDF_LINK_CMD=		gcc
#UDF_CFLAGS=         	-fPIC -mieee-fp
#UDF_LFLAGS=         	-shared
#UDF_SHRLIBS=        	-L$(INTERBASE)/lib  -lgds -lm -lc -mieee-fp -ldl -lcrypt


#NOTE: PIC_J_CFLAGS is special CFLAGS used to build PIPD_IS_SHRLIB modules
#      to workaround the Solaris threading problems with signals


#NOTE: -Xt is ANSI C transition mode (default)
#      -DBDS_COMP is for BSD Compatibility package and is used in <sys/ioctl.h>


#ACCESS_METHOD=		gdslib.linux pipe


#CHMOD_VAL=		666


FUNCTIONS=		functions.bin

#FUNCSHR=		$(OBJS)/firebird/lib/gdsf.so
#GDS_LINK=		$(OBJS)/jrd -lgds_b
#GDS_LINK=		$(GDSSHR_LINK)

#GDSLIB_BACKEND=		$(OBJS)/firebird/lib/gds_b.a
#GDSLIB_LINK=		-L$(OBJS)/jrd -lgds_b -lc -ldl -lcrypt

#GDSSHR=			    libgds.so
#LINUX_GDSSHR=		$(GDSSHR)
#GDSSHR_LINK=		$(SHRLIB_DIR) -lgds -ldl -lcrypt 

#PIPE_GDSSHR=		source/interbase/lib/gds.so.0
#PIPE_GDSSHR_LINK=	$(SHRLIB_DIR) -lgds


#HLPDIR=			source/qli/
#HOSTNAME=		`hostname | cut -d'.' -f1`
INCLUDES=		include_so include_so_ada	

INTL=			
#INTL=			intl


IO_Sources=		unix.cpp

#LANG_OBJECTS=		ada.o ftn.o cob.o
#LANGUAGES=		cc cxx ada microfocus_cob make16 gdl1
LD_LIBS=		-lc
LD_LIBS_J=		-lc
LD_OPTS=		-shared


#LOCK_JRD_MISC=
#LOCK_JRD_MISC=		source/jrd/thd.o
#LOCK_MANAGER=		manager


# In building the test kit may need to look at this
#MUISQL=			muisql
#MUISQL_MU_LIB=		-L /usr/gds.$(HOSTNAME)/qa_tools/lib -lmu
#MUISQL_LINK_OPTS=	$(MUISQL_MU_LIB) $(PIPE_GDSSHR_LINK) -lm 


PIC_FLAGS=		$(CFLAGS) -fPIC
PIPE=			gds.a gds_pipe



REG_HELP=		isc_ins_hlp.dat
REMOTE_GDSSHR=		$(GDSSHR)
REMOTE_GDSSHR_LINK=	$(SERVER_LINK)


SERVER_LINK=		$(GDSSHR_LINK)



SOCKET_LIB=		-lc
THREAD_LIB=		-lpthread


LX_SUPER_GDSSHR=		source/interbase/lib/gds.so.1
SUPER_CLIENT_GDSSHR=    $(LX_SUPER_GDSSHR)
SUPER_BACKEND=		source/jrd/gds_ss.a
SUPER_LINK=		-Lsource/jrd -lgds_ss -lc -ldl -lcrypt -lpthread
SUPER_SERVER=

UTILITIES=

#------------------------------------
# Platform Manager stuff
PLATFORM_PATH=		jrd/os/posix


#   End of file prefix.linux:	$(VERSION)	$(PLATFORM)



#--------------------------------

# Some other things.
# For solaris and gbak
#LINK_LIBS += -lnsl
